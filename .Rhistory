filter(`fertilized` != 1 & `fertilization_intensity` != 0 )
ds_fertilized <- fertilized_0_intensity_1%>%
distinct(`Dataset ID`)%>%
pull()
plots_fertilized <- fertilized_0_intensity_1%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df[df$fertilization_intensity != 0 & !is.na(df$fertilization_intensity) & df$fertilized == 0,] %<>%
mutate(fertilized = 1)
df%>%
group_by(`mown`, `Mowing (1/0)`)%>%
summarise(n=n())%>%
spread(`mown`, n)%>%
kable(caption = 'Contingency table of columns mown and Mowing (1/0)')%>%
kable_styling(latex_options = "HOLD_position")
unique_binary <- df %>%
filter(`mown` == 0 | is.na(mown))%>%
distinct(`Mowing (1/0)`)%>%
pull()
unique_binary <- unique_binary[!is.na(unique_binary) & unique_binary != 0]
for(i in unique_binary){
nb_plots_0 <- df %>%
filter(`mown` == 0 & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_0 <- df %>%
filter(`mown` == 0 & `Mowing (1/0)` == i)%>%
distinct(`Dataset ID`)%>% pull()
nb_plots_NA <- df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_NA <- df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == i)%>%
distinct(`Dataset ID`)%>% pull()
if(nb_plots_0 != 0){
cat(paste("\nThe dataset(s)", paste(names_datasets_0, collapse = ", "), "contain(s)",
nb_plots_0, "plots with mown == 0 and Mowing (1/0) =", i))
cat('\n')
}
if(nb_plots_NA != 0){
cat(paste("\nThe dataset(s)", paste(names_datasets_NA, collapse = ", "), "contain(s)",
nb_plots_NA, "plots with mown = NA and Mowing (1/0) =", i))
cat('\n')
}
}
df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == '?')%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df%>%
group_by(`mown`, `Mowing (1/0)`)%>%
summarise(n=n())%>%
spread(`mown`, n)%>%
kable(caption = 'Contingency table of columns mown and Mowing (1/0) after reclassification (check)')%>%
kable_styling(latex_options = "HOLD_position")
df%>%
group_by(`grazed`, `Grazing (1/0)`)%>%
summarise(n=n())%>%
spread(`grazed`, n)%>%
kable(caption = 'Contingency table of columns grazed and Grazing (1/0)')%>%
kable_styling(latex_options = "HOLD_position")
unique_binary <- df %>%
filter(`grazed` == 0 | is.na(grazed))%>%
distinct(`Grazing (1/0)`)%>%
pull()
unique_binary <- unique_binary[!is.na(unique_binary) & unique_binary != 0]
for(i in unique_binary){
nb_plots_0 <- df %>%
filter(`grazed` == 0 & `Grazing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_0 <- df %>%
filter(`grazed` == 0 & `Grazing (1/0)` == i)%>%
distinct(`Dataset ID`)%>% pull()
nb_plots_NA <- df %>%
filter(is.na(`grazed`) & `Grazing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_NA <- df %>%
filter(is.na(`grazed`) & `Grazing (1/0)` == i)%>%
distinct(`Dataset ID`)%>% pull()
if(nb_plots_0 != 0){
cat(paste("\nThe dataset(s)", paste(names_datasets_0, collapse = ", "), "contain(s)",
nb_plots_0, "plots with grazed == 0 and Grazing (1/0) =", i))
cat('\n')
}
if(nb_plots_NA != 0){
cat(paste("\nThe dataset(s)", paste(names_datasets_NA, collapse = ", "), "contain(s)",
nb_plots_NA, "plots with grazed = NA and Grazing (1/0) =", i))
cat('\n')
}
}
df %>%
filter(is.na(`grazed`) & `Grazing (1/0)` == '?')%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df %>%
filter(`grazed` == 0 & `Grazing (1/0)` == 'probably' )%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df %>%
filter(`grazed` == '0' & `Grazing (1/0)` == '1' )%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df[df$`grazed` %in% '0' & df$`Grazing (1/0)` %in% '1',]%<>%
mutate(grazed = 1)
df%>%
group_by(`grazed`, `Grazing (1/0)`)%>%
summarise(n=n())%>%
spread(`grazed`, n)%>%
kable(caption = 'Contingency table of columns grazed and Grazing (1/0) after reclassification (check')%>%
kable_styling(latex_options = "HOLD_position")
df%>%
group_by(`burnt`, `Burning (1/0)`)%>%
summarise(n=n())%>%
spread(`burnt`, n)%>%
kable(caption = 'Contingency table of columns burnt and Burning (1/0)')%>%
kable_styling(latex_options = "HOLD_position")
unique_binary <- df %>%
filter(`burnt` == 0 | is.na(burnt))%>%
distinct(`Burning (1/0)`)%>%
pull()
unique_binary <- unique_binary[!is.na(unique_binary) & unique_binary != 0]
for(i in unique_binary){
nb_plots_0 <- df %>%
filter(`burnt` == 0 & `Burning (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_0 <- df %>%
filter(`burnt` == 0 & `Burning (1/0)` == i)%>%
distinct(`Dataset ID`)%>% pull()
nb_plots_NA <- df %>%
filter(is.na(`burnt`) & `Burning (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_NA <- df %>%
filter(is.na(`burnt`) & `Burning (1/0)` == i)%>%
distinct(`Dataset ID`)%>% pull()
if(nb_plots_0 != 0){
cat(paste("\nThe dataset(s)", paste(names_datasets_0, collapse = ", "), "contain(s)",
nb_plots_0, "plots with burnt == 0 and Burning (1/0) =", i))
cat('\n')
}
if(nb_plots_NA != 0){
cat(paste("\nThe dataset(s)", paste(names_datasets_NA, collapse = ", "), "contain(s)",
nb_plots_NA, "plots with burnt = NA and Burning (1/0) =", i))
cat('\n')
}
}
df %>%
filter(burnt == 0 & `Burning (1/0)` == '1' )%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df[df$burnt %in% 0 & df$`Burning (1/0)` %in% '1',]%<>%
mutate(burnt = 1)
df %>%
filter(is.na(burnt) & `Burning (1/0)` == '1')%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df[is.na(df$burnt) & df$`Burning (1/0)` %in% '1',]%<>%
mutate(burnt = 1)
df %>%
filter(burnt ==0 & `Burning (1/0)` == '?' )%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df%>%
group_by(`burnt`, `Burning (1/0)`)%>%
summarise(n=n())%>%
spread(`burnt`, n)%>%
kable(caption = 'Contingency table of columns burnt and Burning (1/0) after reclassification (check)')%>%
kable_styling(latex_options = "HOLD_position")
nb_plots_arable <- sum(as.numeric(df$`Ex arable (1/0)`), na.rm = T)
arable_0_duration_1 <- df %>%
filter(`Ex arable (1/0)` != 1 & `years_abandonment` != 0 )
ds_arable <- arable_0_duration_1%>%
distinct(`Dataset ID`)%>%
pull()
plots_arable <- arable_0_duration_1%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df <- df%>%
mutate(former_land_use = ifelse(`Ex arable (1/0)` %in% 1, 'arable', NA))
# Creer un tableau de recap
names(df)[which(names(df) == 'Land use detail (e.g. number of cuts or years since abandonment)')] <- "land_use_details"
land_use_details <- read_excel(file.path(path_grassplot, "lookup_table_LU.xlsx" ),
sheet = 'land_use_details')
land_use_details$land_use_details[grep('Mahd', land_use_details$land_use_details)]
df$land_use_details[grep('Mahd', df$land_use_details)]
df$land_use_details[grep('nMahd', df$land_use_details)]
df$land_use_details[grep('Mahd', df$land_use_details)]
setdiff(land_use_details$land_use_details, df$land_use_details)
setdiff(df$land_use_details, land_use_details$land_use_details)
land_use_details <- read_excel(file.path(path_grassplot, "lookup_table_LU.xlsx" ),
sheet = 'land_use_details')
land_use_details$land_use_details[grep('Mahd', land_use_details$land_use_details)]
land_use_details <- read_excel(file.path(path_grassplot, "lookup_table_LU.xlsx" ),
sheet = 'land_use_details')
land_use_details$land_use_details[grep('Mahd', land_use_details$land_use_details)]
land_use_details <- read_excel(file.path(path_grassplot, "lookup_table_LU.xlsx" ),
sheet = 'land_use_details')
land_use_details$land_use_details[grep('Mahd', land_use_details$land_use_details)]
unique_details_lut <- setdiff(land_use_details$land_use_details, df$land_use_details)
unique_details_df <- setdiff(df$land_use_details, land_use_details$land_use_details)
unique_details_df
df_details <- df[match(unique_details_df, df$land_use_details),]
for(colname in names(land_use_details)){
if(!colname %in% names(df_details))
df_details[,colname] <- NA
}
df_details <- df_details[,names(land_use_details)]
land_use_details <- rbind(land_use_details, df_details)
df_details
df_details$land_use_details
names(df)[which(names(df) == 'Land use detail (e.g. number of cuts or years since abandonment)')] <- "land_use_details"
land_use_details <- read_excel(file.path(path_grassplot, "lookup_table_LU.xlsx" ),
sheet = 'land_use_details')
tail(land_use_details)
tail(rbind(land_use_details, df_details))
land_use_details$land_use_details[grep('Mahd', land_use_details$land_use_details)]
land_use_details$land_use_details[grep('To Mahd', land_use_details$land_use_details)]
land_use_details$land_use_details[grep('Topsoil removal 506', land_use_details$land_use_details)]
unique_details_df
land_use_details$land_use_details[grep('Topsoil removal 506/508\r\r\nMahd 1/a', land_use_details$land_use_details)]
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
options(kableExtra.latex.load_packages = FALSE)
options(warn = 0)
library(readxl)
library(writexl)
library(tidyverse)
library(magrittr)
library(knitr)
library(kableExtra)
library(float)
path_grassplot <- './'
df <- readRDS(file.path(path_grassplot, 'Grassplot 1.21_Data.rds'))
df <- df %>%
mutate_at(.vars = c(95:104), funs(ifelse(. %in% c('NA', '[NA]'), NA, .)))
initial_colnames <- colnames(df)
names(df)[which(names(df) %in% c('Mowing frequency: cuts per year (2=2cut/yr; 1=1cut/yr; 0.5=1 cut/2 yr or 2 yr abandoned; 0.2=1 cut/5 yr or 5 yr abandones; 0=never mown)', 'Grazing intensity (0/1) 1= intensive grazing'))] <- c('mowing_frequency', 'grazing_intensity')
names(df)[which(names(df) == 'Fertilized (1/0)')] <- 'fertilization_intensity'
names(df)[which(names(df) == 'Ex arable years (years since last ploughing)')] <- 'years_abandonment'
global_land_use <- read_excel(file.path(path_grassplot, "lookup_table_LU.xlsx" ),
sheet = 'global_land_use')
df <- df %>%
left_join(global_land_use,
by = c("Land use (5 standard categories: mown, grazed, abandoned, natural grassland, NA)" = "old_classification"))
grazing_values <- na.omit(unique(df$grazing_intensity))
mowing_values <- na.omit(unique(df$mowing_frequency))
fertilization_values <- na.omit(unique(df$fertilization_intensity))
abandonment_values <- na.omit(unique(df$years_abandonment))
numeric_grazing_values <- na.omit(unique(as.numeric(df$grazing_intensity)))
numeric_mowing_values <- na.omit(unique(as.numeric(df$mowing_frequency)))
numeric_fertilization_values <- na.omit(unique(as.numeric(df$fertilization_intensity)))
numeric_abandonment_values <- na.omit(unique(as.numeric(df$years_abandonment)))
non_num_mowing <- setdiff(mowing_values, numeric_mowing_values)
non_num_grazing <- setdiff(grazing_values, numeric_grazing_values)
non_num_fertilization <- setdiff(fertilization_values, numeric_fertilization_values)
non_num_abandonment <- setdiff(numeric_abandonment_values, numeric_abandonment_values)
nb_mowing <- sum(table(df$mowing_frequency)[names(table(df$mowing_frequency)) != 0])
nb_grazing <- sum(table(df$grazing_intensity)[names(table(df$grazing_intensity)) != 0])
nb_fertilization <- sum(table(df$fertilization_intensity)[names(table(df$fertilization_intensity)) != 0])
nb_abandonment <- sum(table(df$years_abandonment)[names(table(df$years_abandonment)) != 0])
df$mowing_frequency <- as.numeric(df$mowing_frequency)
df[df$grazing_intensity %in% c('overgrazing', 'high'),]%<>%
mutate(grazing_intensity = 1)
df[df$grazing_intensity %in% c('middle'),]%<>%
mutate(grazing_intensity = 0.5)
df[df$grazing_intensity %in% c('low'),]%<>%
mutate(grazing_intensity = 0.1)
df$grazing_intensity <- as.numeric(df$grazing_intensity)
df$fertilization_intensity <- as.numeric(df$fertilization_intensity)
df$years_abandonment <- as.numeric(df$years_abandonment)
nb_plots_mown <- sum(df$mown, na.rm = T)
mowing_0_intensity_1 <- df %>%
filter(`mown` != 1 & `mowing_frequency` != 0 )
ds_mown <- mowing_0_intensity_1%>%
distinct(`Dataset ID`)%>%
pull()
plots_mown <- mowing_0_intensity_1%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df[df$mowing_frequency != 0 & !is.na(df$mowing_frequency) & df$mown == 0,] %<>%
mutate(mown = 1)
nb_plots_grazed <- sum(df$grazed, na.rm = T)
grazing_0_intensity_1 <- df %>%
filter(`grazed` != 1 & `grazing_intensity` != 0 )
ds_grazed <- grazing_0_intensity_1%>%
distinct(`Dataset ID`)%>%
pull()
plots_grazed <- grazing_0_intensity_1%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df[df$grazing_intensity != 0 & !is.na(df$grazing_intensity) & df$grazed == 0,] %<>%
mutate(grazed = 1)
nb_plots_fertilized <- sum(df$fertilized, na.rm = T)
fertilized_0_intensity_1 <- df %>%
filter(`fertilized` != 1 & `fertilization_intensity` != 0 )
ds_fertilized <- fertilized_0_intensity_1%>%
distinct(`Dataset ID`)%>%
pull()
plots_fertilized <- fertilized_0_intensity_1%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df[df$fertilization_intensity != 0 & !is.na(df$fertilization_intensity) & df$fertilized == 0,] %<>%
mutate(fertilized = 1)
df%>%
group_by(`mown`, `Mowing (1/0)`)%>%
summarise(n=n())%>%
spread(`mown`, n)%>%
kable(caption = 'Contingency table of columns mown and Mowing (1/0)')%>%
kable_styling(latex_options = "HOLD_position")
unique_binary <- df %>%
filter(`mown` == 0 | is.na(mown))%>%
distinct(`Mowing (1/0)`)%>%
pull()
unique_binary <- unique_binary[!is.na(unique_binary) & unique_binary != 0]
for(i in unique_binary){
nb_plots_0 <- df %>%
filter(`mown` == 0 & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_0 <- df %>%
filter(`mown` == 0 & `Mowing (1/0)` == i)%>%
distinct(`Dataset ID`)%>% pull()
nb_plots_NA <- df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_NA <- df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == i)%>%
distinct(`Dataset ID`)%>% pull()
if(nb_plots_0 != 0){
cat(paste("\nThe dataset(s)", paste(names_datasets_0, collapse = ", "), "contain(s)",
nb_plots_0, "plots with mown == 0 and Mowing (1/0) =", i))
cat('\n')
}
if(nb_plots_NA != 0){
cat(paste("\nThe dataset(s)", paste(names_datasets_NA, collapse = ", "), "contain(s)",
nb_plots_NA, "plots with mown = NA and Mowing (1/0) =", i))
cat('\n')
}
}
df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == '?')%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df%>%
group_by(`mown`, `Mowing (1/0)`)%>%
summarise(n=n())%>%
spread(`mown`, n)%>%
kable(caption = 'Contingency table of columns mown and Mowing (1/0) after reclassification (check)')%>%
kable_styling(latex_options = "HOLD_position")
df%>%
group_by(`grazed`, `Grazing (1/0)`)%>%
summarise(n=n())%>%
spread(`grazed`, n)%>%
kable(caption = 'Contingency table of columns grazed and Grazing (1/0)')%>%
kable_styling(latex_options = "HOLD_position")
unique_binary <- df %>%
filter(`grazed` == 0 | is.na(grazed))%>%
distinct(`Grazing (1/0)`)%>%
pull()
unique_binary <- unique_binary[!is.na(unique_binary) & unique_binary != 0]
for(i in unique_binary){
nb_plots_0 <- df %>%
filter(`grazed` == 0 & `Grazing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_0 <- df %>%
filter(`grazed` == 0 & `Grazing (1/0)` == i)%>%
distinct(`Dataset ID`)%>% pull()
nb_plots_NA <- df %>%
filter(is.na(`grazed`) & `Grazing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_NA <- df %>%
filter(is.na(`grazed`) & `Grazing (1/0)` == i)%>%
distinct(`Dataset ID`)%>% pull()
if(nb_plots_0 != 0){
cat(paste("\nThe dataset(s)", paste(names_datasets_0, collapse = ", "), "contain(s)",
nb_plots_0, "plots with grazed == 0 and Grazing (1/0) =", i))
cat('\n')
}
if(nb_plots_NA != 0){
cat(paste("\nThe dataset(s)", paste(names_datasets_NA, collapse = ", "), "contain(s)",
nb_plots_NA, "plots with grazed = NA and Grazing (1/0) =", i))
cat('\n')
}
}
df %>%
filter(is.na(`grazed`) & `Grazing (1/0)` == '?')%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df %>%
filter(`grazed` == 0 & `Grazing (1/0)` == 'probably' )%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df %>%
filter(`grazed` == '0' & `Grazing (1/0)` == '1' )%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df[df$`grazed` %in% '0' & df$`Grazing (1/0)` %in% '1',]%<>%
mutate(grazed = 1)
df%>%
group_by(`grazed`, `Grazing (1/0)`)%>%
summarise(n=n())%>%
spread(`grazed`, n)%>%
kable(caption = 'Contingency table of columns grazed and Grazing (1/0) after reclassification (check')%>%
kable_styling(latex_options = "HOLD_position")
df%>%
group_by(`burnt`, `Burning (1/0)`)%>%
summarise(n=n())%>%
spread(`burnt`, n)%>%
kable(caption = 'Contingency table of columns burnt and Burning (1/0)')%>%
kable_styling(latex_options = "HOLD_position")
unique_binary <- df %>%
filter(`burnt` == 0 | is.na(burnt))%>%
distinct(`Burning (1/0)`)%>%
pull()
unique_binary <- unique_binary[!is.na(unique_binary) & unique_binary != 0]
for(i in unique_binary){
nb_plots_0 <- df %>%
filter(`burnt` == 0 & `Burning (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_0 <- df %>%
filter(`burnt` == 0 & `Burning (1/0)` == i)%>%
distinct(`Dataset ID`)%>% pull()
nb_plots_NA <- df %>%
filter(is.na(`burnt`) & `Burning (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_NA <- df %>%
filter(is.na(`burnt`) & `Burning (1/0)` == i)%>%
distinct(`Dataset ID`)%>% pull()
if(nb_plots_0 != 0){
cat(paste("\nThe dataset(s)", paste(names_datasets_0, collapse = ", "), "contain(s)",
nb_plots_0, "plots with burnt == 0 and Burning (1/0) =", i))
cat('\n')
}
if(nb_plots_NA != 0){
cat(paste("\nThe dataset(s)", paste(names_datasets_NA, collapse = ", "), "contain(s)",
nb_plots_NA, "plots with burnt = NA and Burning (1/0) =", i))
cat('\n')
}
}
df %>%
filter(burnt == 0 & `Burning (1/0)` == '1' )%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df[df$burnt %in% 0 & df$`Burning (1/0)` %in% '1',]%<>%
mutate(burnt = 1)
df %>%
filter(is.na(burnt) & `Burning (1/0)` == '1')%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df[is.na(df$burnt) & df$`Burning (1/0)` %in% '1',]%<>%
mutate(burnt = 1)
df %>%
filter(burnt ==0 & `Burning (1/0)` == '?' )%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df%>%
group_by(`burnt`, `Burning (1/0)`)%>%
summarise(n=n())%>%
spread(`burnt`, n)%>%
kable(caption = 'Contingency table of columns burnt and Burning (1/0) after reclassification (check)')%>%
kable_styling(latex_options = "HOLD_position")
nb_plots_arable <- sum(as.numeric(df$`Ex arable (1/0)`), na.rm = T)
arable_0_duration_1 <- df %>%
filter(`Ex arable (1/0)` != 1 & `years_abandonment` != 0 )
ds_arable <- arable_0_duration_1%>%
distinct(`Dataset ID`)%>%
pull()
plots_arable <- arable_0_duration_1%>%
distinct(`GrassPlot ID of plot`)%>%
pull()
df <- df%>%
mutate(former_land_use = ifelse(`Ex arable (1/0)` %in% 1, 'arable', NA))
# Creer un tableau de recap
names(df)[which(names(df) == 'Land use detail (e.g. number of cuts or years since abandonment)')] <- "land_use_details"
land_use_details <- read_excel(file.path(path_grassplot, "lookup_table_LU.xlsx" ),
sheet = 'land_use_details')
# The line below is because of a weird behavior of excel when correcting and saving the LUT
land_use_details$land_use_details[grep('Topsoil removal 506/508\r\r\nMahd 1/a', land_use_details$land_use_details)] <- "Topsoil removal 506/508\r\nMahd 1/a"
unique_details_lut <- setdiff(land_use_details$land_use_details, df$land_use_details)
unique_details_df <- setdiff(df$land_use_details, land_use_details$land_use_details)
if(length(unique_details_df) > 0){
cat(paste('\nThe following values are present in the master file and not in the current version of the lookup table:',
paste(unique_details_df, collapse = ', ')))
cat('\n')
}
if(length(unique_details_df) == 0){
cat('\nEach land-use details value present in the master file is present in the current version of the lookup table')
cat('\n')
}
if(length(unique_details_lut) > 0){
cat(paste('\nThe following values are present in the current version of the lookup table and not in the master file:',
paste(unique_details_lut, collapse = ', ')))
cat('\nPlease check that the values have not been corrected in the land-use details column of the master file, or that no plots have been removed from the master file.)')
cat('\n')
}
if(length(unique_details_lut) == 0){
cat('\nEach land-use details values present in the current version of the lookup table is present in the masterfile')
cat('\n')
}
length(unique_details_lut) > 0
length(unique_details_df) > 0
length(unique_details_df) == 0
ls(0)
ls()
aa <- aa_12
aa -> aa_12
parse('aa_12')
eval(parse('aa_12'))
aa_12
eval(parse(text='aa_12'))
parse(text='aa_12')
expression(aa_12)
eval(expression(aa_12))
today()
library(lubridate)
today()
