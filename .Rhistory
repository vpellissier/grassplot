dim(df[df$grazing_intensity == "middle",])
sum(df$grazing_intensity == "middle")
sum(df$grazing_intensity == "middle", na.rm =T)
sum(df2$grazing_intensity == "middle")
dim(df2[df2$grazing_intensity == "middle",])
table(df$mowing_frequency)
class(df$mowing_frequency)
dim(df[df$mowing_frequency == 1,])
dim(df[df$mowing_frequency == '1',])
class(df2)
dim(df2[df2$mowing_frequency == '1',])
dim(df2[df2$mowing_frequency != '1',])
dim(df2[df2$`Dataset ID` == `PL_D`,])
dim(df2[df2$`Dataset ID` == 'PL_D',])
sum(is.na(df$mowing_frequency))
sum(table(df$mowing_frequency))
180077-951
180077-951+468
180077-179342
951-216
180077-179861
table(df2[df2$mowing_frequency == '1',]$mowing_frequency)
df3 <- df2[df2$mowing_frequency == '1',]
table(df3$mowing_frequency)
df <- df_orig %>%
mutate_at(.vars = c(95:104), funs(ifelse(. %in% c('NA', '[NA]'), NA, .)))
names(df)[c(98,100)] <- c('mowing_frequency', 'grazing_intensity')
lut <- read_excel(file.path(path_grassplot, "lookup_table_LU.xlsx" ),
sheet = 'global_land_use')
df3 <- df[df$mowing_frequency == '1',]
head(df3$mowing_frequency)
head(df$mowing_frequency)
179342+216
df3 <- df[na.omit(df$mowing_frequency) == '1',]
df3 <- df[df$mowing_frequency %in% '1',]
df <- df_orig %>%
mutate_at(.vars = c(95:104), funs(ifelse(. %in% c('NA', '[NA]'), NA, .)))
names(df)[c(98,100)] <- c('mowing_frequency', 'grazing_intensity')
lut <- read_excel(file.path(path_grassplot, "lookup_table_LU.xlsx" ),
sheet = 'global_land_use')
df <- df %>%
left_join(lut, by = c("Land use (5 standard categories: mown, grazed, abandoned, natural grassland, NA)" = "old_classification"))
df%>%
subset(`Dataset ID` == 'UA_G')%>%
group_by(`grazed`,
`grazing_intensity`, `abandoned`, `natural_grassland`, `mowing_frequency`, `mown`)%>%
summarise(n=n())%>%
spread(`grazed`, n)
df[df$`Dataset ID` == 'EU_K' & df$grazing_intensity %in%
c('high', 'low', 'middle', 'overgrazing'),] %<>%
mutate(grazed = 1)
df%>%
subset(`Dataset ID` == 'UA_G')%>%
group_by(`grazed`,
`grazing_intensity`, `abandoned`, `natural_grassland`, `mowing_frequency`, `mown`)%>%
summarise(n=n())%>%
spread(`grazed`, n)
dim(df[df$`Dataset ID` == 'UA_G' & df$grazing_intensity %in%
c('high', 'low', 'middle', 'overgrazing'),])
df[df$`Dataset ID` == 'UA_G' & df$grazing_intensity %in%
c('high', 'low', 'middle', 'overgrazing'),] %<>%
mutate(grazed = 1)
df%>%
subset(`Dataset ID` == 'UA_G')%>%
group_by(`grazed`,
`grazing_intensity`, `abandoned`, `natural_grassland`, `mowing_frequency`, `mown`)%>%
summarise(n=n())%>%
spread(`grazed`, n)
df%>%
subset(`Dataset ID` == 'EU_K')%>%
group_by(`grazed`,
`grazing_intensity`, `abandoned`, `natural_grassland`, `mowing_frequency`, `mown`)%>%
summarise(n=n())%>%
spread(`grazed`, n)
dim(df[df$`Dataset ID` == 'UA_G' & df$grazing_intensity %in% '0.5',])
df[df$`Dataset ID` == 'EU_K' & df$grazing_intensity %in% '0.5',] %<>%
mutate(grazed = 1)
dim(df[df$`Dataset ID` == 'EU_K' & df$grazing_intensity %in% '0.5',])
df%>%
subset(`Dataset ID` == 'EU_K')%>%
group_by(`grazed`,
`grazing_intensity`, `abandoned`, `natural_grassland`, `mowing_frequency`, `mown`)%>%
summarise(n=n())%>%
spread(`grazed`, n)
table(df$`Mowing (1/0)`)
class(df$`Mowing (1/0)`)
path <- "./"
path_grassplot <- './'
df <- readRDS(file.path(path_grassplot, 'Grassplot 1.8_Data.rds'))
df %>%
filter(`grazed` == '0' & `Grazing (1/0)` == '1' )%>%
distinct(`Dataset ID`)%>%
pull()
library(tidyverse)
library(magrittr)
df %>%
filter(`grazed` == '0' & `Grazing (1/0)` == '1' )%>%
distinct(`Dataset ID`)%>%
pull()
table_grazed <- function(data, id){
data%>%
subset(`Dataset ID` == id)%>%
group_by(`grazed`,
`grazing_intensity`, `abandoned`, `natural_grassland`,
`mowing_frequency`, `mown`, `Mowing (1/0)`)%>%
summarise(n=n())%>%
spread(`grazed`, n)
}
table_mown <- function(data, id){
data%>%
subset(`Dataset ID` == id)%>%
group_by(`mown`,
`grazing_intensity`, `abandoned`, `natural_grassland`,
`mowing_frequency`, `mown`, `Mowing (1/0)`)%>%
summarise(n=n())%>%
spread(`mown`, n)
}
path_grassplot <- './'
df <- readRDS(file.path(path_grassplot, 'Grassplot 1.8_Data.rds'))
df <- df %>%
mutate_at(.vars = c(95:104), funs(ifelse(. %in% c('NA', '[NA]'), NA, .)))
# The columns 98 (mowing frequency) and 100 (grazing intensity) are renamed:
names(df)[c(98,100)] <- c('mowing_frequency', 'grazing_intensity')
### Correction of the land use column
lut <- read_excel(file.path(path_grassplot, "lookup_table_LU.xlsx" ),
sheet = 'global_land_use')
# The global_land_use lookup table is used to harmonize the column 95 with the new binary columns:
df <- df %>%
left_join(lut, by = c("Land use (5 standard categories: mown, grazed, abandoned, natural grassland, NA)" = "old_classification"))
### Matching new binary columns and intensity columns
#### Mowing and mowing intensity
# Datasets containing plots for which mowing intensity > 0 & mown != 1) (here and after, we refer to the new binary columns)
df %>%
filter(`mown` != 1 & `mowing_frequency` != '0' )%>%
distinct(`Dataset ID`)%>%
pull()
# EU_K contains resp. 4 and 4 plots classified as natural_grassland with a mowing frequency of resp. 0.03 and 4. Only the plots with a frequency >= 0.2 will be classified as mown (abandoned less than 5 years).
# EU_K contains resp. 12, 84, 30, 4 and 12 plots classified as abandoned with a mowing frequency of resp. 0.03, 0.05, 0.1, 0.2, 0.3. Only the plots with a frequency >= 0.2 will be classified as mown (abandoned less than 5 years).
df[df$`Dataset ID` == 'EU_K' & df$mowing_frequency %in% c('4', '1', '0.5', '0.3', '0.2'),] %<>%
mutate(mown = 1)
# CZ_J contains plot classified as abandoned which have a mowing frequency == 0.05. These will not be classified as mown. (I could not find the original land-use information in CZ_J.xls)
#### Grazing and Grazing intensity
# Datasets containing plots for which grazing intensity > 0 & grazed != 1)
df %>%
filter(`grazed` != 1 & `grazing_intensity` != '0')%>%
distinct(`Dataset ID`)%>%
pull()
# IR_A contains 34 plots classified as mown which have a grazing_intensity == 0.1. These plots will be classified as grazed (and also remain mown as indicated in the original database IR_A.xls). **Note for Idoia** In the original DB, the grazing intensity is noted as 1, 2, 3. Is it correct that it stands for low, medium and high intensity, and hence translate as 0.1, 0.5, 1 in the master file?
table_grazed(df, 'IR_A')
df[df$`Dataset ID` == 'IR_A',] %<>%
mutate(grazed = ifelse(grazing_intensity != '0', 1, 0))
table_grazed(df, 'IR_A')
# PL_D contains 39 plots classified as mown which have a grazing_intensity == 0.5. These plots will be classified as grazed. (No composition data, so I could not check the original dataset)
table_grazed(df, 'PL_D')
df[df$`Dataset ID` == 'PL_D' & df$grazing_intensity  %in% '0.5',] %<>%
mutate(grazed = 1)
table_grazed(df, 'PL_D')
# TR_B contains 32 plots classified as abandoned which have a grazing_intensity == 0.1. These plots will be classified as grazed (no further info could be found in TR_B.xls)
table_grazed(df, 'TR_B')
df[df$`Dataset ID` == 'TR_B' & df$grazing_intensity  %in% '0.1',] %<>%
mutate(grazed = 1)
table_grazed(df, 'TR_B')
# UA_G contains reps. 12, 15, 30 and 3 plots classified as natural_grassland which have a grazing_intensity == 'high', 'low', 'middle' or 'overgrazing'. These plots will be classified as grazed (I could not find the original land-use information in UA_G.xls)
table_grazed(df, 'UA_G')
df[df$`Dataset ID` == 'UA_G' & df$grazing_intensity %in%
c('high', 'low', 'middle', 'overgrazing'),] %<>%
mutate(grazed = 1)
table_grazed(df, 'UA_G')
# EU_K contains 4 plots classified as natural_grassland which have a grazing_intensity == 0.5. These plots will be classified as grazed (no further info could be found in EU_K.xls)
table_grazed(df, 'EU_K')
df[df$`Dataset ID` == 'EU_K' & df$grazing_intensity %in% '0.5',] %<>%
mutate(grazed = 1)
table_grazed(df, 'EU_K')
### Matching new and old binary columns
#
df <- readRDS(file.path(path_grassplot, 'Grassplot 1.8_Data.rds'))
df <- df %>%
mutate_at(.vars = c(95:104), funs(ifelse(. %in% c('NA', '[NA]'), NA, .)))
# The columns 98 (mowing frequency) and 100 (grazing intensity) are renamed:
names(df)[c(98,100)] <- c('mowing_frequency', 'grazing_intensity')
### Correction of the land use column
lut <- read_excel(file.path(path_grassplot, "lookup_table_LU.xlsx" ),
sheet = 'global_land_use')
library(readr)
### Correction of the land use column
lut <- read_excel(file.path(path_grassplot, "lookup_table_LU.xlsx" ),
sheet = 'global_land_use')
library(readxl)
### Correction of the land use column
lut <- read_excel(file.path(path_grassplot, "lookup_table_LU.xlsx" ),
sheet = 'global_land_use')
df <- df %>%
left_join(lut, by = c("Land use (5 standard categories: mown, grazed, abandoned, natural grassland, NA)" = "old_classification"))
df %>%
filter(`mown` != 1 & `mowing_frequency` != '0' )%>%
distinct(`Dataset ID`)%>%
pull()
df[df$`Dataset ID` == 'EU_K' & df$mowing_frequency %in% c('4', '1', '0.5', '0.3', '0.2'),] %<>%
mutate(mown = 1)
df %>%
filter(`grazed` != 1 & `grazing_intensity` != '0')%>%
distinct(`Dataset ID`)%>%
pull()
# IR_A contains 34 plots classified as mown which have a grazing_intensity == 0.1. These plots will be classified as grazed (and also remain mown as indicated in the original database IR_A.xls). **Note for Idoia** In the original DB, the grazing intensity is noted as 1, 2, 3. Is it correct that it stands for low, medium and high intensity, and hence translate as 0.1, 0.5, 1 in the master file?
table_grazed(df, 'IR_A')
df[df$`Dataset ID` == 'IR_A',] %<>%
mutate(grazed = ifelse(grazing_intensity != '0', 1, 0))
table_grazed(df, 'IR_A')
table_grazed(df, 'PL_D')
df[df$`Dataset ID` == 'PL_D' & df$grazing_intensity  %in% '0.5',] %<>%
mutate(grazed = 1)
table_grazed(df, 'PL_D')
table_grazed(df, 'TR_B')
df[df$`Dataset ID` == 'TR_B' & df$grazing_intensity  %in% '0.1',] %<>%
mutate(grazed = 1)
table_grazed(df, 'TR_B')
table_grazed(df, 'UA_G')
df[df$`Dataset ID` == 'UA_G' & df$grazing_intensity %in%
c('high', 'low', 'middle', 'overgrazing'),] %<>%
mutate(grazed = 1)
table_grazed(df, 'UA_G')
table_grazed(df, 'EU_K')
df[df$`Dataset ID` == 'EU_K' & df$grazing_intensity %in% '0.5',] %<>%
mutate(grazed = 1)
table_grazed(df, 'EU_K')
df %>%
filter(`grazed` == '0' & `Grazing (1/0)` == '1' )%>%
distinct(`Dataset ID`)%>%
pull()
names(df)
sum(df$grazed)
sum(df$grazed, na.rm = T)
df_back <- df
df %>%
filter(`grazed` == 1 & `Grazing (1/0)` == '2')
df %>%
filter(`grazed` == '0' & `Grazing (1/0)` == '1' )
df %>%
filter(`grazed` == '0' & `Grazing (1/0)` == '1' )%<>% mutate(grazed = 1)
sum(df$grazed, na.rm = T)
df %<>%
filter(`grazed` == '0' & `Grazing (1/0)` == '1' )%<>% mutate(grazed = 1)
df <- df_back
df[df$`grazed` == '0' & df$`Grazing (1/0)` == '1',]%<>% mutate(grazed = 1)
dim(df[df$`grazed` == '0' & df$`Grazing (1/0)` == '1',])
dim(df[df$`grazed` %in% '0' & df$`Grazing (1/0)` %in% '1',])
df[df$`grazed` %in% '0' & df$`Grazing (1/0)` %in% '1',]%<>% mutate(grazed = 1)
sum(df$grazed, na.rm = T)
options(warn = 0)
library(readxl)
library(tidyverse)
library(magrittr)
library(knitr)
library(kableExtra)
table_grazed <- function(data, id){
data%>%
subset(`Dataset ID` == id)%>%
group_by(`grazed`,
`grazing_intensity`, `abandoned`, `natural_grassland`,
`mowing_frequency`, `mown`, `Mowing (1/0)`)%>%
summarise(n=n())%>%
spread(`grazed`, n)
}
table_mown <- function(data, id){
data%>%
subset(`Dataset ID` == id)%>%
group_by(`mown`,
`grazing_intensity`, `abandoned`, `natural_grassland`,
`mowing_frequency`, `mown`, `Mowing (1/0)`)%>%
summarise(n=n())%>%
spread(`mown`, n)
}
path_grassplot <- './'
df <- readRDS(file.path(path_grassplot, 'Grassplot 1.8_Data.rds'))
df <- df %>%
mutate_at(.vars = c(95:104), funs(ifelse(. %in% c('NA', '[NA]'), NA, .)))
# The columns 98 (mowing frequency) and 100 (grazing intensity) are renamed:
names(df)[c(98,100)] <- c('mowing_frequency', 'grazing_intensity')
### Correction of the land use column
lut <- read_excel(file.path(path_grassplot, "lookup_table_LU.xlsx" ),
sheet = 'global_land_use')
# The global_land_use lookup table is used to harmonize the column 95 with the new binary columns:
df <- df %>%
left_join(lut, by = c("Land use (5 standard categories: mown, grazed, abandoned, natural grassland, NA)" = "old_classification"))
### Matching new binary columns and intensity columns
#### Mowing and mowing intensity
# Datasets containing plots for which mowing intensity > 0 & mown != 1) (here and after, we refer to the new binary columns)
df %>%
filter(`mown` != 1 & `mowing_frequency` != '0' )%>%
distinct(`Dataset ID`)%>%
pull()
# EU_K contains resp. 4 and 4 plots classified as natural_grassland with a mowing frequency of resp. 0.03 and 4. Only the plots with a frequency >= 0.2 will be classified as mown (abandoned less than 5 years).
# EU_K contains resp. 12, 84, 30, 4 and 12 plots classified as abandoned with a mowing frequency of resp. 0.03, 0.05, 0.1, 0.2, 0.3. Only the plots with a frequency >= 0.2 will be classified as mown (abandoned less than 5 years).
df[df$`Dataset ID` == 'EU_K' & df$mowing_frequency %in% c('4', '1', '0.5', '0.3', '0.2'),] %<>%
mutate(mown = 1)
# CZ_J contains plot classified as abandoned which have a mowing frequency == 0.05. These will not be classified as mown. (I could not find the original land-use information in CZ_J.xls)
#### Grazing and Grazing intensity
# Datasets containing plots for which grazing intensity > 0 & grazed != 1)
df %>%
filter(`grazed` != 1 & `grazing_intensity` != '0')%>%
distinct(`Dataset ID`)%>%
pull()
# IR_A contains 34 plots classified as mown which have a grazing_intensity == 0.1. These plots will be classified as grazed (and also remain mown as indicated in the original database IR_A.xls). **Note for Idoia** In the original DB, the grazing intensity is noted as 1, 2, 3. Is it correct that it stands for low, medium and high intensity, and hence translate as 0.1, 0.5, 1 in the master file?
table_grazed(df, 'IR_A')
df[df$`Dataset ID` == 'IR_A',] %<>%
mutate(grazed = ifelse(grazing_intensity != '0', 1, 0))
table_grazed(df, 'IR_A')
# PL_D contains 39 plots classified as mown which have a grazing_intensity == 0.5. These plots will be classified as grazed. (No composition data, so I could not check the original dataset)
table_grazed(df, 'PL_D')
df[df$`Dataset ID` == 'PL_D' & df$grazing_intensity  %in% '0.5',] %<>%
mutate(grazed = 1)
table_grazed(df, 'PL_D')
# TR_B contains 32 plots classified as abandoned which have a grazing_intensity == 0.1. These plots will be classified as grazed (no further info could be found in TR_B.xls)
table_grazed(df, 'TR_B')
df[df$`Dataset ID` == 'TR_B' & df$grazing_intensity  %in% '0.1',] %<>%
mutate(grazed = 1)
table_grazed(df, 'TR_B')
# UA_G contains reps. 12, 15, 30 and 3 plots classified as natural_grassland which have a grazing_intensity == 'high', 'low', 'middle' or 'overgrazing'. These plots will be classified as grazed (I could not find the original land-use information in UA_G.xls)
table_grazed(df, 'UA_G')
df[df$`Dataset ID` == 'UA_G' & df$grazing_intensity %in%
c('high', 'low', 'middle', 'overgrazing'),] %<>%
mutate(grazed = 1)
table_grazed(df, 'UA_G')
# EU_K contains 4 plots classified as natural_grassland which have a grazing_intensity == 0.5. These plots will be classified as grazed (no further info could be found in EU_K.xls)
table_grazed(df, 'EU_K')
df[df$`Dataset ID` == 'EU_K' & df$grazing_intensity %in% '0.5',] %<>%
mutate(grazed = 1)
table_grazed(df, 'EU_K')
df %>%
filter(`mown` == 0 | is.na(mown))%>%
distinct(`Mowing (1/0`)%>%
pull()
df %>%
filter(`mown` == 0 | is.na(mown))%>%
distinct(`Mowing (1/0)`)%>%
pull()
df %>%
filter(`mown` == 0 | is.na(mown))%>%
distinct(`Mowing (1/0)`)%>%
pull()->a
is.na(a)
na.omit(a)
a[!is.na(a)]
a[!is.na(a) & a != 0]
unique_binary <- df %>%
filter(`mown` == 0 | is.na(mown))%>%
distinct(`Mowing (1/0)`)%>%
pull()
unique_binary <- unique_binary[!is.na(unique_binary) & unique_binary != 0]
for(i in unique_binary){
nb_plots_0 <- df %>%
filter(`mown` == 0 & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_0 <- df %>%
filter(`mown` == 0 & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
nb_plots_NA <- df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_NA <- df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
if(nb_plots_0 != 0)
print(paste("There are", nb_plots_0, "plots with mown == 0 and Mowing (1/0) =", i))
}
a[!is.na(a) & a != 0]
i <- "?"
nb_plots_0 <- df %>%
filter(`mown` == 0 & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
nb_plots_0
names_datasets_0 <- df %>%
filter(`mown` == 0 & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
nb_plots_NA <- df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_NA <- df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
nb_plots_NA
for(i in unique_binary){
nb_plots_0 <- df %>%
filter(`mown` == 0 & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_0 <- df %>%
filter(`mown` == 0 & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
nb_plots_NA <- df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_NA <- df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
if(nb_plots_0 != 0)
print(paste("There are", nb_plots_0, "plots with mown == 0 and Mowing (1/0) =", i))
if(nb_plots_0 != 0)
print(paste("There are", nb_plots_0, "plots with mown = NA and Mowing (1/0) =", i))
}
for(i in unique_binary){
nb_plots_0 <- df %>%
filter(`mown` == 0 & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_0 <- df %>%
filter(`mown` == 0 & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
nb_plots_NA <- df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_NA <- df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
if(nb_plots_0 != 0)
print(paste("There are", nb_plots_0, "plots with mown == 0 and Mowing (1/0) =", i))
if(nb_plots_NA != 0)
print(paste("There are", nb_plots_NA, "plots with mown = NA and Mowing (1/0) =", i))
}
for(i in unique_binary){
nb_plots_0 <- df %>%
filter(`mown` == 0 & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_0 <- df %>%
filter(`mown` == 0 & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
nb_plots_NA <- df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_NA <- df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
if(nb_plots_0 != 0)
print(paste("The dataset(s)", names_datasets_0, "contain(s)",
nb_plots_0, "plots with mown == 0 and Mowing (1/0) =", i))
if(nb_plots_NA != 0)
print(paste("The dataset(s)", names_datasets_NA, "contain(s)",
nb_plots_NA, "plots with mown = NA and Mowing (1/0) =", i))
}
for(i in unique_binary){
nb_plots_0 <- df %>%
filter(`mown` == 0 & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_0 <- df %>%
filter(`mown` == 0 & `Mowing (1/0)` == i)%>%
distinct(`Dataset ID`)%>% pull()
nb_plots_NA <- df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == i)%>%
distinct(`Dataset ID`)%>% count()
names_datasets_NA <- df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% pull()
if(nb_plots_0 != 0)
print(paste("The dataset(s)", names_datasets_0, "contain(s)",
nb_plots_0, "plots with mown == 0 and Mowing (1/0) =", i))
if(nb_plots_NA != 0)
print(paste("The dataset(s)", names_datasets_NA, "contain(s)",
nb_plots_NA, "plots with mown = NA and Mowing (1/0) =", i))
}
for(i in unique_binary){
nb_plots_0 <- df %>%
filter(`mown` == 0 & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_0 <- df %>%
filter(`mown` == 0 & `Mowing (1/0)` == i)%>%
distinct(`Dataset ID`)%>% pull()
nb_plots_NA <- df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_NA <- df %>%
filter(is.na(`mown`) & `Mowing (1/0)` == i)%>%
distinct(`Dataset ID`)%>% pull()
if(nb_plots_0 != 0)
print(paste("The dataset(s)", names_datasets_0, "contain(s)",
nb_plots_0, "plots with mown == 0 and Mowing (1/0) =", i))
if(nb_plots_NA != 0)
print(paste("The dataset(s)", names_datasets_NA, "contain(s)",
nb_plots_NA, "plots with mown = NA and Mowing (1/0) =", i))
}
names(df)
table(df$burnt)
sum(is.na(df$burnt))
names(df)
unique_binary <- df %>%
filter(`burnt` == 0 | is.na(burnt))%>%
distinct(`Burning (1/0)`)%>%
pull()
unique_binary
unique_binary <- unique_binary[!is.na(unique_binary) & unique_binary != 0]
unique_binary
i <- "1"
nb_plots_0 <- df %>%
filter(`burnt` == 0 & `Burning (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_0 <- df %>%
filter(`burnt` == 0 & `Burning (1/0)` == i)%>%
distinct(`Dataset ID`)%>% pull()
nb_plots_NA <- df %>%
filter(is.na(`burnt`) & `Burning (1/0)` == i)%>%
distinct(`GrassPlot ID of plot`)%>% count()
names_datasets_NA <- df %>%
filter(is.na(`burnt`) & `Burning (1/0)` == i)%>%
distinct(`Dataset ID`)%>% pull()
names_datasets_NA
names_datasets_0
nb_plots_0 != 0
paste("The dataset(s)", names_datasets_0, "contain(s)",
nb_plots_0, "plots with burnt == 0 and Burning (1/0) =", i)
print(paste("The dataset(s)", c(names_datasets_0), "contain(s)",
nb_plots_0, "plots with burnt == 0 and Burning (1/0) =", i))
paste(names_datasets_0, collapse = ",")
paste(names_datasets_0, collapse = ", ")
table(df$burnt)
names(df)
